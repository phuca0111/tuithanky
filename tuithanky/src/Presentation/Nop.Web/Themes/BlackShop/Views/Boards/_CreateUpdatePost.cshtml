@model EditForumPostModel
@using Nop.Core.Domain.Forums;
@{
    //page class
    NopHtml.AppendPageCssClassParts("html-forum-edit-page");
}

@await Component.InvokeAsync("ForumBreadcrumb", new { forumTopicId = Model.ForumTopicId })
<div class="page forum-edit-page">
    <div class="bs_title_black title_bg_white bs_text_center bs_margin_b_mid">
        @if (Model.IsEdit)
        {
            <h4>@T("Forum.EditPost")</h4>
        }
        else
        {
            <h4>@T("Forum.NewPost")</h4>
        }
    </div>
    <div class="page-body">
        <div asp-validation-summary="ModelOnly" class="message-error"></div>
        <input type="hidden" asp-for="Id" />
        <input type="hidden" asp-for="ForumTopicId" />
        <div class="fieldset">
            <div class="form-fields">
                <div class="bs_form_header">
                    <div class="bs_input_area">
                        <label>@T("Forum.ForumName"):</label>
                        <strong class="forum-subject">@Model.ForumName</strong>
                    </div>
                    <div class="bs_input_area">
                        <label>@T("Forum.TopicTitle"):</label>
                        <strong class="topic-subject">@Model.ForumTopicSubject</strong>
                    </div>
                    <div class="bs_input_area">
                        @if (Model.ForumEditor == EditorType.BBCodeEditor)
                        {
                            <nop-bb-code-editor asp-for="Text" />
                        }
                        <textarea asp-for="Text" class="forum-post-text"></textarea>
                        <span asp-validation-for="Text"></span>
                    </div>
                    @if (Model.IsCustomerAllowedToSubscribe)
                    {
                        <div class="inputs reversed">
                            <input asp-for="Subscribed" />
                            <label asp-for="Subscribed">@T("Forum.NotifyWhenSomeonePostsInThisTopic")</label>
                        </div>
                    }
                    @if (Model.DisplayCaptcha)
                    {
                        <nop-captcha />
                    }
                </div>
            </div>
        </div>
        <div class="buttons">
            <button type="submit" class="button-1 submit-post-button">@T("Forum.Submit")</button>
            <button type="button" class="button-2 cancel-post-button" onclick="setLocation('@Url.RouteUrl("TopicSlug", new {id = Model.ForumTopicId, slug = Model.ForumTopicSeName})')">@T("Forum.Cancel")</button>
        </div>
    </div>
</div>